/*!
 * Ajax Bootstrap Select
 *
 * Extends the bootstrap-select plugin so it can use a remote source for searching. Originally for CROSCON.
 *
 * @version 1.1.0
 * @author Adam Heim - https://github.com/truckingsim
 * @link https://github.com/truckingsim/Ajax-Bootstrap-Select
 * @copyright 2014 Adam Heim
 * @license Released under the MIT license.
 *
 * Contributors:
 *   Mark Carver - https://github.com/markcarver
 *
 * Last build: 2014-09-22 7:05:24 AM CDT
 */
!function(a,b){var c=function(b,c){if(c=c||{},this.$element=a(b),this.$loading=a(),this.selectpicker=this.$element.data("selectpicker"),!this.selectpicker)return void this.log("ajaxSelectPicker: Cannot attach ajax without selectpicker being run first!",!0);this.cachedData={},this.previousQuery="",this.query="";var d={ajaxSearchUrl:null,ajaxOptions:{},bindEvent:"keyup",cache:!0,emptyClear:!0,emptyRequest:!1,ignoredKeys:{9:"tab",16:"shift",17:"ctrl",18:"alt",27:"esc",37:"left",39:"right",38:"up",40:"down",91:"meta",229:"unknown"},placeHolderOption:null,preprocessData:null,processData:null,debug:!1,preserveSelected:"auto",loadingTemplate:'<div class="menu-loading">Loading...</div>',searchPlaceholder:null},e=[{from:"ajaxResultsPreHook",to:"preprocessData"},{from:"mixWithCurrents",to:"preserveSelected"},{from:"ajaxSearchUrl",to:{ajaxOptions:{url:"{{{value}}}"}}}];if(e.length){var f=this;a.map(e,function(b){a.isPlainObject(b.to)&&c[b.from]?(f.replaceValue(b.to,"{{{value}}}",c[b.from]),c=a.extend(!0,{},c,b.to),f.log(['[WARNING] ajaxSelectPicker: Depreciated option "'+b.from+'". Update code to use:',b.to]),delete c[b.from]):c[b.from]&&(c[b.to]=c[b.from],f.log(['[WARNING] ajaxSelectPicker: Depreciated option "'+b.from+'". Update code to use: "'+b.to+'"']),delete c[b.from])})}return c.preserveSelected&&"auto"===c.preserveSelected&&(c.preserveSelected=this.selectpicker.multiple),this.options=a.extend(!0,{},d,c),this.$element.data("searchUrl")&&(this.options.ajaxOptions.url=this.$element.data("searchUrl")),this.options.ajaxOptions.url?void setTimeout(function(){f.init()},500):void this.log("ajaxSelectPicker: ajaxOptions.url must be set!",!0)};c.prototype.init=function(){var b=this;this.list=new d(this);var c;this.selectpicker.$searchbox.attr("placeholder",this.options.searchPlaceholder).off("input propertychange").on(this.options.bindEvent,function(d){if(b.query=b.selectpicker.$searchbox.val(),b.options.cache||(b.options.ignoredKeys[13]="enter"),b.options.ignoredKeys[d.keyCode])return!0;if(!b.query.length&&(b.options.emptyClear||b.list.destroy(),!b.options.emptyRequest))return!0;if(clearTimeout(c),b.options.cache&&b.cachedData[b.query]&&13!==d.keyCode){var e=b.list.build(b.cachedData[b.query]);return e.length?(b.$element.html(e),b.$element.selectpicker("refresh"),!0):(b.log(["ajaxSelectPicker: Unable to build the options from cached data.",b.query,b.cachedData[b.query]],!0),void b.list.restore())}c=setTimeout(function(){b.list.save(),b.list.destroy(),b.selectpicker.$menu.css("minHeight",0),b.selectpicker.$menu.find("> .inner").css("minHeight",0),b.$loading.remove(),b.$loading=a(b.options.loadingTemplate),b.selectpicker.$menu.append(b.$loading),b.$element.selectpicker("refresh");var c={};c.url=b.options.ajaxOptions.url,c.success=function(a){var c=b.processData(a,b.query);if(c){var d=b.list.build(c);if(d.length)return void b.$element.html(d);b.log(["ajaxSelectPicker: Unable to build the options from data.",a,d],!0)}else b.log(["ajaxSelectPicker: Unable to process data.",a],!0);b.list.restore()},c.error=function(a){b.log(["ajaxSelectPicker:",a],!0),b.list.restore()},c.complete=function(){b.$loading.remove(),b.$element.selectpicker("refresh")};var d=a.extend(!0,{},b.options.ajaxOptions);c.dataType=d.hasOwnProperty("dataType")?d.dataType:"json",c.type=d.hasOwnProperty("type")?d.type:"POST",d.hasOwnProperty("data")?(d.processedData=d.data,"function"==typeof d.data&&(d.processedData=d.data()),c.data=d.processedData):d.data={q:b.query},b.replaceValue(c.data,"{{{q}}}",b.query),a.ajax(c)},300)})},c.prototype.log=function(a,c){b.console&&this.options.debug&&(a=a instanceof Array?a:[a],b.console[c?"error":"log"].apply(b.console,a))},c.prototype.processData=function(b,c){var d,e,f,g,h,i,j,k=[],l=[],m=[];if(this.options.preserveSelected&&this.list&&(h=this.list.last())&&h&&(m=m.concat(h.selected)),a.isPlainObject(b))f=m.concat(a.map(b,function(a){return[a]}));else{if(!a.isArray(b))return this.log(["ajaxSelectPicker: The data type passed was not an Array or Object.",b],!0),!1;f=m.concat(b)}if(i=[].concat(f),a.isFunction(this.options.preprocessData)&&(i=this.options.preprocessData(i),!a.isArray(i)||!i.length))return this.log(["ajaxSelectPicker: The preprocessData callback did not return an array or was empty.",b,i],!0),!1;for(e=i.length,d=0;e>d;d++)g=i[d],a.isPlainObject(g)&&(g.hasOwnProperty("divider")||g.hasOwnProperty("data")&&a.isPlainObject(g.data)&&g.data.divider?k.push({divider:!0}):g.hasOwnProperty("value")?-1===l.indexOf(g.value)?(l.push(g.value),g=a.extend({title:g.value,"class":"",data:{},disabled:!1,selected:!1},g),k.push(g)):this.log(["ajaxSelectPicker: Duplicate item found, ignoring.",g]):this.log(['ajaxSelectPicker: Data item must have a "value" property, skipping.',g],!0));return j=[].concat(k),!a.isFunction(this.options.processData)||(j=this.options.processData(j),a.isArray(j)&&j.length)?(this.options.cache&&c&&(this.cachedData[c]=j),j):(this.log(["ajaxSelectPicker: The processedData callback did not return an array or was empty.",b,k,j],!0),!1)},c.prototype.replaceValue=function(b,c,d,e){var f=this;e=a.extend({recursive:!0,depth:!1,limit:!1},e),a.each(b,function(g,h){return e.limit!==!1&&"number"==typeof e.limit&&e.limit<=0?!1:void(a.isArray(b[g])||a.isPlainObject(b[g])?(e.recursive&&e.depth===!1||e.recursive&&"number"==typeof e.depth&&e.depth>0)&&f.replaceValue(b[g],c,d,e):h===c&&(e.limit!==!1&&"number"==typeof e.limit&&e.limit--,b[g]=d))})},a.fn.ajaxSelectPicker=function(b){return this.each(function(){a(this).data("ajaxSelectPicker")||a(this).data("ajaxSelectPicker",new c(this,b))})};var d=function(b){this.states=[],a.extend(this,b)};d.prototype.build=function(b){var c,d,e=b.length,f=a("<select/>");for(d=0;e>d;d++){var g=b[d],h=a("<option/>");if(g.hasOwnProperty("divider"))h.attr("data-divider","true"),f.append(h);else{h.val(g.value).text(g.text).attr("class",g.class).prop("disabled",g.disabled),g.selected&&!this.selectpicker.multiple&&f.find(":selected").prop("selected",!1),h.prop("selected",g.selected);for(c in g.data)g.data.hasOwnProperty(c)&&h.attr("data-"+c,g.data[c]);f.append(h)}}return f.find("option").length&&"string"==typeof this.options.placeHolderOption&&this.options.placeHolderOption.length&&f.prepend('<option data-hidden="true">'+this.options.placeHolderOption+"</option>"),f.html()},d.prototype.destroy=function(){this.$element.find("option").remove(),this.selectpicker.$menu.find("li").remove()},d.prototype.last=function(){return this.states.length?this.states[this.states.length-1]:!1},d.prototype.restore=function(){return this.states.length?(this.$element.html(this.states.pop().html),!0):!1},d.prototype.save=function(b){var c=[];if(b=b||!1,b||(this.states=[]),this.options.preserveSelected){var d=this.$element.find(":selected");this.selectpicker.multiple||(d=d.last()),d.each(function(){var b=a(this),d=b.val();c.push({value:d,text:b.text(),data:b.data()||{},preserved:!0,selected:!0})})}this.states.push({selected:c,html:this.$element.html()})}}(jQuery,window);